import json

sbox = [62, 117, 195, 179, 20, 210, 41, 66, 116, 178, 152, 143, 75, 105, 254, 1, 158, 95, 101, 175, 191, 166, 36, 24, 50, 39, 190, 120, 52, 242, 182, 185, 61, 225, 140, 38, 150, 80, 19, 109, 246, 252, 40, 13, 65, 236, 124, 186, 214, 86, 235, 100, 97, 49, 197, 154, 176, 199, 253, 69, 88, 112, 139, 77, 184, 45, 133, 104, 15, 54, 177, 244, 160, 169, 82, 148, 73, 30, 229, 35, 79, 137, 157, 180, 248, 163, 241, 231, 81, 94, 165, 9, 162, 233, 18, 85, 217, 84, 7, 55, 63, 171, 56, 118, 237, 132, 136, 22, 90, 221, 103, 161, 205, 11, 255, 14, 122, 47, 71, 201, 99, 220, 83, 74, 173, 76, 144, 16, 155, 126, 60, 96, 44, 234, 17, 215, 107, 138, 159, 183, 251, 3, 198, 0, 89, 170, 131, 151, 219, 29, 230, 32, 187, 125, 134, 64, 12, 202, 164, 247, 25, 223, 222, 119, 174, 67, 147, 146, 206, 51, 243, 53, 121, 239, 68, 130, 70, 203, 211, 111, 108, 113, 8, 106, 57, 240, 21, 93, 142, 238, 167, 5, 128, 72, 189, 192, 193, 92, 10, 204, 87, 145, 188, 172, 224, 226, 207, 27, 218, 48, 33, 28, 123, 6, 37, 59, 4, 102, 114, 91, 23, 209, 34, 42, 2, 196, 141, 208, 181, 245, 43, 78, 213, 216, 232, 46, 98, 26, 212, 58, 115, 194, 200, 129, 227, 249, 127, 149, 135, 228, 31, 153, 250, 156, 168, 110]
ptable = [
    0, 4, 8, 12, 
    1, 5, 9, 13, 
    2, 6, 10, 14, 
    3, 7, 11, 15, 
    16, 20, 24, 28,
    17, 21, 25, 29,
    18, 22, 26, 30,
    19, 23, 27, 31,
]

rev_sbox = [sbox.index(x) for x in range(256)]

def load_dict(filename):
    '''load dict from json file'''
    with open(filename,"r") as json_file:
        dic = json.load(json_file)
    return dic

bias = load_dict("biastable.record")

with open("data", "rb") as f:
    f = f.read()
    known = []
    for i in range(0,len(f),8):
        known.append((f[i:i+4], f[i+4:i+8]))

def liner_res(k0,k1,plain_cipher):
    plain, cipher = plain_cipher
    mid0 = cipher[0] ^ k0
    mid1 = cipher[1] ^ k1
    mid0 = rev_sbox[mid0]
    mid1 = rev_sbox[mid1]
    res = (plain[0] & 0x80) ^ (mid0 & 0x13) ^ (mid1 & 0x21)
    return bin(res)[2:].count('1') % 2 

print(bias[str(0x80)])
print(bias[str(0x0c)])

max = 0
guess_key = None
for k0 in range(256):
    for k1 in range(256):
        cnt = 0
        for test_pair_len in range(pow(2,12)):
            if liner_res(k0,k1,known[test_pair_len]):
                cnt += 1
        if abs(cnt-pow(2,11)) > max:
            max = abs(cnt-pow(2,11))
            guess_key = [k0,k1]
            print(abs(cnt-pow(2,11)), guess_key)